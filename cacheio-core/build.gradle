import org.moallemi.gradle.internal.VersionCodeType

apply plugin: 'com.android.library'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'org.moallemi.advanced-build-version'
apply from: '../gradle/config/plugins/jacoco.gradle'
apply from: '../gradle/config/plugins/lint.gradle'

group = 'com.github.mobilejazz'

def v = rootProject.ext

android {
  compileSdkVersion v.compileSdkVersion
  buildToolsVersion v.buildToolsVersion

  defaultConfig {
    minSdkVersion v.minSdkVersion
    targetSdkVersion v.targetSdkVersion
    versionCode advancedVersioning.versionCode
    versionName advancedVersioning.versionName
  }
  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_7
    targetCompatibility JavaVersion.VERSION_1_7
  }
  buildTypes {
    debug {
      testCoverageEnabled = true
    }
    release {
      minifyEnabled false
      proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
    }
  }
}

advancedVersioning {
  outputOptions {
    renameOutput false
  }
  codeOptions {
    versionCodeType VersionCodeType.DATE
  }
  nameOptions {
    versionMajor 0
    versionMinor 2
    versionPatch 5
    //versionBuild 0
  }
}

dependencies {
  compile "com.android.support:appcompat-v7:${v.supportLibrariesVersion}"
  compile "com.android.support:support-annotations:${v.supportLibrariesVersion}"

  compile 'com.squareup.sqlbrite:sqlbrite:0.3.1'

  testCompile "junit:junit:${v.junitVersion}"
  testCompile "org.assertj:assertj-core:${v.assertJVersion}"
  testCompile "org.mockito:mockito-core:${v.mockitoVersion}"
  testCompile "org.robolectric:robolectric:${v.robolectricVersion}"
}
